name: Docker

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: vehicle-history
  ECR_REGISTRY: ${{ secrets.AWS_REPOSITORY }}
jobs:
#  laravel-tests:
#    defaults:
#      run:
#        working-directory: sistema
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: shivammathur/setup-php@b7d1d9c9a92d8d8463ce36d7f60da34d461724f8
#        with:
#          php-version: '7.3'
#      - uses: actions/checkout@v2
#      - name: Copy .env
#        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
#      - name: Install Dependencies
#        run: |
#          composer config http-basic.nova.laravel.com bethree.dev@gmail.com 'Brasil03'
#          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#          php artisan testdb:make
#
#      - name: Generate key
#        run: php artisan key:generate
#
#      - name: Directory Permissions
#        run: chmod -R 777 storage bootstrap/cache
#
#      - name: Execute tests (Unit and Feature tests) via PHPUnit
#        run: php artisan test

  push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push image to Amazon ECR
        run: |
          echo secrets.AWS_ACCESS_KEY_ID
          docker build --build-arg APP_ENV_BUILD=production --build-arg APP_DEBUG_BUILD=false --file .docker/app/Dockerfile.production -t $ECR_REGISTRY/$IMAGE_NAME:v1-update-$GITHUB_RUN_ID .
          docker push $ECR_REGISTRY/$IMAGE_NAME:v1-update-$GITHUB_RUN_ID
          sed -i "s|{{image}}|$ECR_REGISTRY/$IMAGE_NAME:v1-update-$GITHUB_RUN_ID|g"  .k8s/prod/v2/app/deployment-app.yml

      - name: Trigger deploy
        uses: Consensys/kubernetes-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f .k8s/prod/v2/app/deployment-app.yml
